import{M as t}from"./index.4d2fc52f.js";import{B as p}from"./index.5216862f.js";import{t as u,C as c}from"./tag.acfbb551.js";import{s as r}from"./animation.fdae6ac9.js";import{j as o}from"./jsx-runtime.264ec44b.js";const i=u(c.TOOLTIP),a=r(i(p.Reset,"button"),{height:"$md",border:"1px solid $medGrey",borderTopColor:"rgba(223,223,223,0.5)",borderRadius:"$1",borderTopLeftRadius:0,borderTopRightRadius:0,typo:{weight:"$2"},color:"$primary",backgroundColor:"#fbfbfb"}),n=r(i("div"),{display:"inline-flex",flexDirection:"column",variants:{withAction:{true:{boxShadow:"0 1px 2px $shadow2",[`& ${t.Debug.Container}`]:{boxShadow:"none",borderBottom:0,borderBottomLeftRadius:0,borderBottomRightRadius:0}}}}}),m=({label:e,onClick:s,children:l,...d})=>o.exports.jsxs(n,{withAction:!!e,children:[o.exports.jsx(t.Debug,{...d,children:l}),e&&o.exports.jsx(a,{onClick:s,children:e})]}),y=Object.assign(m,{Button:a,Container:n});try{Tooltip.displayName="Tooltip",Tooltip.__docgenInfo={description:"Renders a {@link Message.Debug } with an optional action.",displayName:"Tooltip",props:{label:{defaultValue:null,description:"If provided, this will render an action button within the tooltip.",name:"label",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"A callback handler for the action button.",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLButtonElement>"}},orientation:{defaultValue:{value:"'left'"},description:"The end of the message where the arrow is rendered.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}}}}}catch{}export{y as T};
