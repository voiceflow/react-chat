{"version":3,"file":"Chat.story.efb1ecea.js","sources":["../../src/components/Chat/Chat.story.tsx"],"sourcesContent":["import { ComponentMeta, ComponentStory } from '@storybook/react';\n\nimport SystemResponse, { SystemResponseProps } from '@/components/SystemResponse';\nimport * as SystemResponseStory from '@/components/SystemResponse/SystemResponse.story';\nimport UserResponse, { UserResponseProps } from '@/components/UserResponse';\nimport * as UserResponseStory from '@/components/UserResponse/UserResponse.story';\nimport { VF_ICON } from '@/fixtures';\n\nimport Chat from '.';\n\nexport default {\n  title: 'Templates/Chat',\n  component: Chat,\n  args: {\n    title: 'Assistant Name',\n    image: VF_ICON,\n    description: \"Voiceflow's virtual assistant is here to help.\",\n    startTime: Date.now(),\n    isOpen: true,\n  },\n} as ComponentMeta<typeof Chat>;\n\nconst Template: ComponentStory<typeof Chat> = (args) => <Chat {...args} />;\nconst SystemResponseTemplate = (args: Partial<SystemResponseProps>) => (\n  <SystemResponse {...(SystemResponseStory.default.args as SystemResponseProps)} {...args} />\n);\nconst UserResponseTemplate = (args: Partial<UserResponseProps>) => (\n  <UserResponse {...(UserResponseStory.default.args as UserResponseProps)} {...args} />\n);\n\nexport const Empty = Template.bind({});\n\nexport const Exhaustive = Template.bind({});\nExhaustive.args = {\n  children: (\n    <>\n      <SystemResponseTemplate {...SystemResponseStory.SimpleText.args} />\n      <UserResponseTemplate {...UserResponseStory.Simple.args} />\n      <SystemResponseTemplate {...SystemResponseStory.MultilineText.args} />\n      <UserResponseTemplate {...UserResponseStory.Multiline.args} />\n      <SystemResponseTemplate {...SystemResponseStory.WrappingText.args} />\n      <UserResponseTemplate {...UserResponseStory.Wrapping.args} />\n      <SystemResponseTemplate {...SystemResponseStory.Image.args} />\n      <UserResponseTemplate {...UserResponseStory.Debug.args} />\n      <SystemResponseTemplate {...SystemResponseStory.Card.args} />\n      <UserResponseTemplate {...UserResponseStory.DebugReason.args} />\n      <SystemResponseTemplate {...SystemResponseStory.ActionableCard.args} />\n      <UserResponseTemplate {...UserResponseStory.ActionableDebugReason.args} />\n      <SystemResponseTemplate {...SystemResponseStory.Multiple.args} />\n\n      <UserResponseTemplate {...UserResponseStory.ActionableDebugReason.args} />\n      <SystemResponseTemplate {...SystemResponseStory.MultipleWithFeedback.args} />\n    </>\n  ),\n};\n"],"names":["Chat_story","title","component","Chat","args","image","VF_ICON","description","startTime","Date","now","isOpen","Template","_jsx","SystemResponseTemplate","SystemResponse","SystemResponseStory","UserResponseTemplate","UserResponse","UserResponseStory","Empty","bind","Exhaustive","children","_Fragment"],"mappings":"qkCAUA,MAAeA,GAAA,CACbC,MAAO,iBACPC,UAAWC,EACXC,KAAM,CACJH,MAAO,iBACPI,MAAOC,EACPC,YAAa,iDACbC,UAAWC,KAAKC,IAJZ,EAKJC,OAAQ,EALJ,CAHO,EAYTC,EAAkDR,GAAAS,EAACV,EAASC,CAAAA,GAAAA,CAAV,CAAxD,EACMU,EAA0BV,GAC9BS,EAACE,MAAoBC,EAA4BZ,KAAjD,GAAmFA,CAAnF,CADF,EAGMa,EAAwBb,GAC5BS,EAACK,MAAkBC,EAA0Bf,KAA7C,GAA6EA,CAA7E,CADF,EAIagB,GAAQR,EAASS,KAAK,EAAd,EAERC,EAAaV,EAASS,KAAK,EAAd,EAC1BC,EAAWlB,KAAO,CAChBmB,WACEC,EAAA,CAAA,SAAA,CACEX,EAACC,EAAD,CAAA,GAA4BE,EAA+BZ,IAAAA,CAA3D,EACAS,EAACI,MAAyBE,EAAyBf,IAAAA,CAAnD,EACAS,EAACC,MAA2BE,EAAkCZ,IAAAA,CAA9D,EACAS,EAACI,MAAyBE,EAA4Bf,IAAAA,CAAtD,EACAS,EAACC,MAA2BE,EAAiCZ,IAAAA,CAA7D,EACAS,EAACI,MAAyBE,EAA2Bf,IAAAA,CAArD,EACAS,EAACC,MAA2BE,EAA0BZ,IAAAA,CAAtD,EACAS,EAACI,MAAyBE,EAAwBf,IAAAA,CAAlD,EACAS,EAACC,MAA2BE,EAAyBZ,IAAAA,CAArD,EACAS,EAACI,MAAyBE,EAA8Bf,IAAAA,CAAxD,EACAS,EAACC,MAA2BE,EAAmCZ,IAAAA,CAA/D,EACAS,EAACI,MAAyBE,EAAwCf,IAAAA,CAAlE,EACAS,EAACC,MAA2BE,EAA6BZ,IAAAA,CAAzD,EAEAS,EAACI,MAAyBE,EAAwCf,IAAAA,CAAlE,EACAS,EAACC,MAA2BE,EAAyCZ,IAAAA,CAhBvE,CAAA,CAAA,CAAA,CAFc"}