{"version":3,"file":"index.484a71f2.js","sources":["../../../../node_modules/cuid/lib/pad.js","../../../../node_modules/cuid/lib/fingerprint.browser.js","../../../../node_modules/cuid/lib/getRandomValue.browser.js","../../../../node_modules/cuid/index.js"],"sourcesContent":["module.exports = function pad (num, size) {\n  var s = '000000000' + num;\n  return s.substr(s.length - size);\n};\n","var pad = require('./pad.js');\n\nvar env = typeof window === 'object' ? window : self;\nvar globalCount = Object.keys(env).length;\nvar mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;\nvar clientId = pad((mimeTypesLength +\n  navigator.userAgent.length).toString(36) +\n  globalCount.toString(36), 4);\n\nmodule.exports = function fingerprint () {\n  return clientId;\n};\n","\nvar getRandomValue;\n\nvar crypto = typeof window !== 'undefined' &&\n  (window.crypto || window.msCrypto) ||\n  typeof self !== 'undefined' &&\n  self.crypto;\n\nif (crypto) {\n    var lim = Math.pow(2, 32) - 1;\n    getRandomValue = function () {\n        return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);\n    };\n} else {\n    getRandomValue = Math.random;\n}\n\nmodule.exports = getRandomValue;\n","/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\nvar fingerprint = require('./lib/fingerprint.js');\nvar pad = require('./lib/pad.js');\nvar getRandomValue = require('./lib/getRandomValue.js');\n\nvar c = 0,\n  blockSize = 4,\n  base = 36,\n  discreteValues = Math.pow(base, blockSize);\n\nfunction randomBlock () {\n  return pad((getRandomValue() *\n    discreteValues << 0)\n    .toString(base), blockSize);\n}\n\nfunction safeCounter () {\n  c = c < discreteValues ? c : 0;\n  c++; // this is not subliminal\n  return c - 1;\n}\n\nfunction cuid () {\n  // Starting with a lowercase letter makes\n  // it HTML element ID friendly.\n  var letter = 'c', // hard-coded allows for sequential access\n\n    // timestamp\n    // warning: this exposes the exact date and time\n    // that the uid was created.\n    timestamp = (new Date().getTime()).toString(base),\n\n    // Prevent same-machine collisions.\n    counter = pad(safeCounter().toString(base), blockSize),\n\n    // A few chars to generate distinct ids for different\n    // clients (so different computers are far less\n    // likely to generate the same id)\n    print = fingerprint(),\n\n    // Grab some more chars from Math.random()\n    random = randomBlock() + randomBlock();\n\n  return letter + timestamp + counter + print + random;\n}\n\ncuid.slug = function slug () {\n  var date = new Date().getTime().toString(36),\n    counter = safeCounter().toString(36).slice(-4),\n    print = fingerprint().slice(0, 1) +\n      fingerprint().slice(-1),\n    random = randomBlock().slice(-2);\n\n  return date.slice(-2) +\n    counter + print + random;\n};\n\ncuid.isCuid = function isCuid (stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  if (stringToCheck.startsWith('c')) return true;\n  return false;\n};\n\ncuid.isSlug = function isSlug (stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  var stringLength = stringToCheck.length;\n  if (stringLength >= 7 && stringLength <= 10) return true;\n  return false;\n};\n\ncuid.fingerprint = fingerprint;\n\nmodule.exports = cuid;\n"],"names":["pad","num","size","s","require$$0","env","globalCount","mimeTypesLength","clientId","fingerprint_browser","getRandomValue","crypto","lim","getRandomValue_browser","fingerprint","require$$1","require$$2","c","blockSize","base","discreteValues","randomBlock","safeCounter","cuid","letter","timestamp","counter","print","random","date","stringToCheck","stringLength","cuid_1"],"mappings":"AAAA,IAAAA,EAAiB,SAAcC,EAAKC,EAAM,CACxC,IAAIC,EAAI,YAAcF,EACtB,OAAOE,EAAE,OAAOA,EAAE,OAASD,CAAI,CACjC,ECHIF,EAAMI,EAENC,EAAM,OAAO,QAAW,SAAW,OAAS,KAC5CC,EAAc,OAAO,KAAKD,CAAG,EAAE,OAC/BE,EAAkB,UAAU,UAAY,UAAU,UAAU,OAAS,EACrEC,EAAWR,GAAKO,EAClB,UAAU,UAAU,QAAQ,SAAS,EAAE,EACvCD,EAAY,SAAS,EAAE,EAAG,CAAC,EAE7BG,EAAiB,UAAwB,CACvC,OAAOD,CACT,ECVIE,EAEAC,EAAS,OAAO,OAAW,MAC5B,OAAO,QAAU,OAAO,WACzB,OAAO,KAAS,KAChB,KAAK,OAEP,GAAIA,EAAQ,CACR,IAAIC,EAAM,KAAK,IAAI,EAAG,EAAE,EAAI,EAC5BF,EAAiB,UAAY,CACzB,OAAO,KAAK,IAAIC,EAAO,gBAAgB,IAAI,YAAY,CAAC,CAAC,EAAE,GAAKC,CAAG,CAC3E,CACA,MACIF,EAAiB,KAAK,OAG1B,IAAAG,EAAiBH,ECLbI,EAAcV,EACdJ,EAAMe,EACNL,EAAiBM,EAEjBC,EAAI,EACNC,EAAY,EACZC,EAAO,GACPC,EAAiB,KAAK,IAAID,EAAMD,CAAS,EAE3C,SAASG,GAAe,CACtB,OAAOrB,GAAKU,EAAgB,EAC1BU,GAAkB,GACjB,SAASD,CAAI,EAAGD,CAAS,CAC9B,CAEA,SAASI,GAAe,CACtB,OAAAL,EAAIA,EAAIG,EAAiBH,EAAI,EAC7BA,IACOA,EAAI,CACb,CAEA,SAASM,GAAQ,CAGf,IAAIC,EAAS,IAKXC,EAAa,IAAI,KAAI,EAAG,QAAS,EAAE,SAASN,CAAI,EAGhDO,EAAU1B,EAAIsB,EAAW,EAAG,SAASH,CAAI,EAAGD,CAAS,EAKrDS,EAAQb,EAAa,EAGrBc,EAASP,IAAgBA,IAE3B,OAAOG,EAASC,EAAYC,EAAUC,EAAQC,CAChD,CAEAL,EAAK,KAAO,UAAiB,CAC3B,IAAIM,EAAO,IAAI,KAAI,EAAG,QAAS,EAAC,SAAS,EAAE,EACzCH,EAAUJ,EAAW,EAAG,SAAS,EAAE,EAAE,MAAM,EAAE,EAC7CK,EAAQb,EAAa,EAAC,MAAM,EAAG,CAAC,EAC9BA,EAAa,EAAC,MAAM,EAAE,EACxBc,EAASP,EAAa,EAAC,MAAM,EAAE,EAEjC,OAAOQ,EAAK,MAAM,EAAE,EAClBH,EAAUC,EAAQC,CACtB,EAEAL,EAAK,OAAS,SAAiBO,EAAe,CAC5C,OAAI,OAAOA,GAAkB,SAAiB,GAC1C,EAAAA,EAAc,WAAW,GAAG,CAElC,EAEAP,EAAK,OAAS,SAAiBO,EAAe,CAC5C,GAAI,OAAOA,GAAkB,SAAU,MAAO,GAC9C,IAAIC,EAAeD,EAAc,OACjC,OAAIC,GAAgB,GAAKA,GAAgB,EAE3C,EAEAR,EAAK,YAAcT,EAEnB,IAAAkB,EAAiBT"}